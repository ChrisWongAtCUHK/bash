<!DOCTYPE html>
<!-- saved from url=(0041)http://ss64.com/bash/syntax-keyboard.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta charset="UTF-8">
<link rel="STYLESHEET" href="./bash keyboard shortcuts   SS64.com_files/main2.css" type="text/css">
<title>bash keyboard shortcuts | SS64.com</title>
</head><!-- #BeginLibraryItem "/Library/head_bashsyntax.lbi" --><body><div id="tnav"><ul>
<li class="tbtn"><a href="http://ss64.com/"> ( &nbsp;SS64 &nbsp;)</a></li>
<li class="tbtn"><a href="http://ss64.com/bash">Bash</a></li>
<li class="tbtn"><a href="http://ss64.com/bash/syntax.html">Syntax</a></li>

</ul></div><!-- #EndLibraryItem --><h1>Bash Keyboard Shortcuts</h1> 
<p>Moving the cursor:</p>
<pre>  Ctrl + a   Go to the beginning of the line (Home)
  Ctrl + e   Go to the End of the line (End)
  Ctrl + p   Previous command (Up arrow)
  Ctrl + n   Next command (Down arrow)
   Alt + b   Back (left) one word
   Alt + f   Forward (right) one word
  Ctrl + f   Forward one character
  Ctrl + b   Backward one character
  Ctrl + xx  Toggle between the start of line and current cursor position</pre>
<p>Editing:</p>
<pre> Ctrl + L   Clear the Screen, similar to the clear command
 Ctrl + u   Cut/delete the line before the cursor position.

  Alt + Del Delete the Word before the cursor.
  Alt + d   Delete the Word after the cursor.
 Ctrl + d   Delete character under the cursor
 Ctrl + h   Delete character before the cursor (Backspace)
 Ctrl + w   Cut the Word before the cursor to the clipboard.
 Ctrl + k   Cut the Line after the cursor to the clipboard.
  Alt + t   Swap current word with previous
 Ctrl + t   Swap the last two characters before the cursor (typo).
 Esc  + t   Swap the last two words before the cursor.
 ctrl + y   Paste the last thing to be cut (yank)
  Alt + u   UPPER capitalize every character from the cursor to the end of the current word.
  Alt + l   Lower the case of every character from the cursor to the end of the current word.
  Alt + c   Capitalize the character under the cursor and move to the end of the word.
  Alt + r   Cancel the changes and put back the line as it was in the history (revert).
 ctrl + _   Undo
 
 TAB        Tab completion for file/directory names</pre>
<blockquote><p>For example, to move to a directory 'sample1'; Type<span class="code"> cd sam</span> ;  then press <span class="code">TAB</span> and <span class="code">ENTER</span>. <br>
type just enough characters to uniquely identify the directory you wish to open.</p>
</blockquote>
<p>History:</p>
<pre>  Ctrl + r   Recall the last command including the specified character(s)
             (equivalent to : vim ~/.bash_history). 
  Ctrl + p   Previous command in history (i.e. walk back through the command history)
  Ctrl + n   Next command in history (i.e. walk forward through the command history)

  Ctrl + s   Go back to the next most recent command.
             (beware to not execute it from a terminal because this will also launch its XOFF).
  Ctrl + o   Execute the command found via Ctrl+r or Ctrl+s
  Ctrl + g   Escape from history searching mode
        !!   Repeat last command
      !<i>abc</i>   Run last command starting with <i>abc</i><br>    !<i>abc</i>:p   Print last command starting with <i>abc</i><br>        !$   Last argument of previous command<br>   ALT + .   Last argument of previous command<br>        !*   All arguments of previous command<br>^<i>abc</i>­^­<i>def</i>   Run previous command, replacing <i>abc</i> with <i>def</i></pre>
<p>Process control:</p>
<pre> Ctrl + C   Interrupt/Kill whatever you are running (SIGINT)
 Ctrl + l   Clear the screen
 Ctrl + s   Stop output to the screen (for long running verbose commands)
 Ctrl + q   Allow output to the screen (if previously stopped using command above)
 Ctrl + D   Send an EOF marker, unless disabled by an option, this will close the current shell (EXIT)
 Ctrl + Z   Send the signal SIGTSTP to the current task, which suspends it.
            To return to it later enter <a href="http://ss64.com/bash/fg.html">fg</a> 'process name' (foreground).</pre>
<p><b>Emacs mode vs Vi Mode</b></p>
<p>All the above assume that bash is running in the default Emacs setting, if you prefer this can be switched to <a href="http://ss64.com/vi.html">Vi</a> shortcuts instead. </p>
<p>Set Vi Mode in bash:</p>
<pre>$ set -o vi </pre>
<p>Set Emacs Mode in bash:</p>
<pre>$ set -o emacs </pre>
<p><b>Related</b>:</p>
<p><a href="http://ss64.com/bash/syntax-jobs.html">fg</a> - Bring a command to the foreground.<br>
<a href="http://ss64.com/vi.html">vi editor</a> - A one page reference to the vi editor<br>
~./.bash_history - Text file with command history<br>
Equivalent <a href="http://ss64.com/nt/syntax-keyboard.html">Windows Keyboard shortcuts</a></p>
</body></html>